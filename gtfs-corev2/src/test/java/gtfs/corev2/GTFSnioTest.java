/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gtfs.corev2;

import org.junit.Test;

import gtfs.corev2.nio.GTFSGraphBuilder;
import gtfs.corev2.nio.GraphSerializerBuilder;
import gtfs.corev2.nio.GraphSerializerBuilder.GraphSerializer;

import static org.junit.Assert.*;

import java.util.Iterator;

import org.jgrapht.Graph;


public class GTFSnioTest {
    @Test 
    public void testLocalGraphBuilder() {
        Graph<GTFSVertex, GTFSEdge> g = 
        		new GTFSGraphBuilder("mbta")
        		.localDataset()
        		.build();
        
        System.out.println("The graph has : "+g.vertexSet().size()+" vertices.");
        System.out.println("The graph has : "+g.edgeSet().size()+" edges.");
        
        Iterator<GTFSEdge> it = g.edgeSet().iterator();
        for (int i = 0; i < 10; i++) {
        	GTFSEdge e = it.next();
        	if (Double.isNaN(e.getWeight())) {
        		System.out.println("the NaN edge : "+e.toString());
        	}
        }
        
        //serialization test (local)
        GraphSerializer gs = 
        	new GraphSerializerBuilder("mbta")
        	.localSerializer()
        	.build();
        
        gs.serialize(g);
        
        //serialization test (remote)
        //GraphSerializer gsRemote = 
        //	new GraphSerializerBuilder("mbta")
        //	.remoteSerializer()
        //	.build();
        
        //gsRemote.serialize(g);
        
        
    }
    
}
